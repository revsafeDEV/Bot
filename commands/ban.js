const { SlashCommandBuilder, EmbedBuilder, PermissionFlagsBits } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('ban')
        .setDescription('Banuje u≈ºytkownika na serwerze')
        .addUserOption(option =>
            option.setName('u≈ºytkownik')
                .setDescription('U≈ºytkownik do zbanowania')
                .setRequired(true))
        .addStringOption(option =>
            option.setName('pow√≥d')
                .setDescription('Pow√≥d banowania')
                .setRequired(false))
        .addIntegerOption(option =>
            option.setName('dni_wiadomo≈õci')
                .setDescription('Ile dni wiadomo≈õci usunƒÖƒá (0-7)')
                .setMinValue(0)
                .setMaxValue(7)
                .setRequired(false))
        .setDefaultMemberPermissions(PermissionFlagsBits.BanMembers),
    
    cooldown: 5,
    
    async execute(interaction) {
        const target = interaction.options.getUser('u≈ºytkownik');
        const reason = interaction.options.getString('pow√≥d') || 'Nie podano powodu';
        const deleteMessageDays = interaction.options.getInteger('dni_wiadomo≈õci') || 0;
        const member = interaction.guild.members.cache.get(target.id);

        // Sprawdzenie czy u≈ºytkownik pr√≥buje zbanowaƒá samego siebie
        if (target.id === interaction.user.id) {
            return interaction.reply({
                content: '‚ùå Nie mo≈ºesz zbanowaƒá samego siebie!',
                ephemeral: true
            });
        }

        // Sprawdzenie czy u≈ºytkownik jest ju≈º zbanowany
        try {
            const bannedUser = await interaction.guild.bans.fetch(target.id);
            if (bannedUser) {
                return interaction.reply({
                    content: '‚ùå Ten u≈ºytkownik jest ju≈º zbanowany!',
                    ephemeral: true
                });
            }
        } catch (error) {
            // U≈ºytkownik nie jest zbanowany, kontynuuj
        }

        // Je≈õli u≈ºytkownik jest na serwerze, sprawd≈∫ hierarchiƒô
        if (member) {
            if (!member.bannable) {
                return interaction.reply({
                    content: '‚ùå Nie mogƒô zbanowaƒá tego u≈ºytkownika! (Sprawd≈∫ hierarchiƒô r√≥l)',
                    ephemeral: true
                });
            }

            if (member.roles.highest.position >= interaction.member.roles.highest.position) {
                return interaction.reply({
                    content: '‚ùå Nie mo≈ºesz zbanowaƒá u≈ºytkownika o r√≥wnej lub wy≈ºszej roli!',
                    ephemeral: true
                });
            }
        }

        try {
            // Pr√≥ba wys≈Çania prywatnej wiadomo≈õci do u≈ºytkownika (je≈õli jest na serwerze)
            if (member) {
                try {
                    const dmEmbed = new EmbedBuilder()
                        .setColor('#8B0000')
                        .setTitle('üî® Zosta≈Çe≈õ zbanowany!')
                        .addFields(
                            { name: 'Serwer', value: interaction.guild.name, inline: true },
                            { name: 'Zbanowany przez', value: interaction.user.tag, inline: true },
                            { name: 'Pow√≥d', value: reason }
                        )
                        .setTimestamp();

                    await target.send({ embeds: [dmEmbed] });
                } catch (error) {
                    console.log(`Nie mo≈ºna wys≈Çaƒá DM do ${target.tag}`);
                }
            }

            // Banowanie u≈ºytkownika
            await interaction.guild.members.ban(target, {
                reason: reason,
                deleteMessageDays: deleteMessageDays
            });

            // Embed z potwierdzeniem
            const embed = new EmbedBuilder()
                .setColor('#8B0000')
                .setTitle('‚úÖ U≈ºytkownik zosta≈Ç zbanowany')
                .addFields(
                    { name: 'U≈ºytkownik', value: `${target.tag} (${target.id})`, inline: true },
                    { name: 'Moderator', value: interaction.user.tag, inline: true },
                    { name: 'Pow√≥d', value: reason },
                    { name: 'Usuniƒôto wiadomo≈õci', value: `${deleteMessageDays} dni`, inline: true }
                )
                .setTimestamp();

            await interaction.reply({ embeds: [embed] });

            console.log(`${interaction.user.tag} zbanowa≈Ç ${target.tag} z powodu: ${reason}`);

        } catch (error) {
            console.error('B≈ÇƒÖd podczas banowania:', error);
            await interaction.reply({
                content: '‚ùå WystƒÖpi≈Ç b≈ÇƒÖd podczas banowania u≈ºytkownika!',
                ephemeral: true
            });
        }
    },
};
